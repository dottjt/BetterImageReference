var _user$project$Component_RadioComponent$radio = F3(
	function (value, isChecked, msg) {
		return A2(
			_elm_lang$html$Html$label,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding', _1: '20px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('radio'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$name('font-size'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(msg),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$checked(isChecked),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(value),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Component_RadioComponent$radioUpsideDownComponent = function (model) {
	return A2(
		_elm_lang$html$Html$fieldset,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_user$project$Component_RadioComponent$radio,
				'Yes',
				_elm_lang$core$Native_Utils.eq(model.radioUpsideDown, _user$project$Model$YesUpsideDown),
				_user$project$Msg$SelectUpsideDown(_user$project$Model$YesUpsideDown)),
			_1: {
				ctor: '::',
				_0: A3(
					_user$project$Component_RadioComponent$radio,
					'No',
					_elm_lang$core$Native_Utils.eq(model.radioUpsideDown, _user$project$Model$NoUpsideDown),
					_user$project$Msg$SelectUpsideDown(_user$project$Model$NoUpsideDown)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Component_RadioComponent$radioIntervalComponent = function (model) {
	return A2(
		_elm_lang$html$Html$fieldset,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_user$project$Component_RadioComponent$radio,
				'30',
				_elm_lang$core$Native_Utils.eq(model.radioInterval, _user$project$Model$I30),
				_user$project$Msg$SelectIntervalTiming(_user$project$Model$I30)),
			_1: {
				ctor: '::',
				_0: A3(
					_user$project$Component_RadioComponent$radio,
					'45',
					_elm_lang$core$Native_Utils.eq(model.radioInterval, _user$project$Model$I45),
					_user$project$Msg$SelectIntervalTiming(_user$project$Model$I45)),
				_1: {
					ctor: '::',
					_0: A3(
						_user$project$Component_RadioComponent$radio,
						'60',
						_elm_lang$core$Native_Utils.eq(model.radioInterval, _user$project$Model$I60),
						_user$project$Msg$SelectIntervalTiming(_user$project$Model$I60)),
					_1: {
						ctor: '::',
						_0: A3(
							_user$project$Component_RadioComponent$radio,
							'90',
							_elm_lang$core$Native_Utils.eq(model.radioInterval, _user$project$Model$I90),
							_user$project$Msg$SelectIntervalTiming(_user$project$Model$I90)),
						_1: {
							ctor: '::',
							_0: A3(
								_user$project$Component_RadioComponent$radio,
								'120',
								_elm_lang$core$Native_Utils.eq(model.radioInterval, _user$project$Model$I120),
								_user$project$Msg$SelectIntervalTiming(_user$project$Model$I120)),
							_1: {
								ctor: '::',
								_0: A3(
									_user$project$Component_RadioComponent$radio,
									'Custom',
									_elm_lang$core$Native_Utils.eq(model.radioInterval, _user$project$Model$Custom),
									_user$project$Msg$SelectIntervalTiming(_user$project$Model$Custom)),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
