var _user$project$Component_RadioComponent$customInput = F2(
	function (radioInterval, label_text) {
		var _p0 = radioInterval;
		if (_p0.ctor === 'Custom') {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('field'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h5,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(label_text),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('control'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('input'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('text'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Msg$UpdateCustomIntervalInput),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				});
		} else {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'none'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'});
		}
	});
var _user$project$Component_RadioComponent$customInputComponent = function (model) {
	var _p1 = model.radioIntervalType;
	if (_p1.ctor === 'Second') {
		return A2(_user$project$Component_RadioComponent$customInput, model.radioIntervalTiming, 'How many seconds?');
	} else {
		return A2(_user$project$Component_RadioComponent$customInput, model.radioIntervalTiming, 'How many minutes?');
	}
};
var _user$project$Component_RadioComponent$radio = F3(
	function (value, isChecked, msg) {
		var _p2 = isChecked;
		if (_p2 === true) {
			return A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('uncheckedRadio button is-primary is-outlined'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('radio'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$name('font-size'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(msg),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$checked(isChecked),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(value),
						_1: {ctor: '[]'}
					}
				});
		} else {
			return A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('checkedRadio button'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('radio'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$name('font-size'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(msg),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$checked(isChecked),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(value),
						_1: {ctor: '[]'}
					}
				});
		}
	});
var _user$project$Component_RadioComponent$radioComponent = F3(
	function (model, text, msg) {
		return A3(
			_user$project$Component_RadioComponent$radio,
			text,
			_elm_lang$core$Native_Utils.eq(model.radioIntervalTiming, msg),
			_user$project$Msg$SelectIntervalTiming(msg));
	});
var _user$project$Component_RadioComponent$radioUpsideDownComponent = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('radio__upsidedown__container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A3(
				_user$project$Component_RadioComponent$radio,
				'Yes',
				_elm_lang$core$Native_Utils.eq(model.radioUpsideDown, _user$project$Model$YesUpsideDown),
				_user$project$Msg$SelectUpsideDown(_user$project$Model$YesUpsideDown)),
			_1: {
				ctor: '::',
				_0: A3(
					_user$project$Component_RadioComponent$radio,
					'No',
					_elm_lang$core$Native_Utils.eq(model.radioUpsideDown, _user$project$Model$NoUpsideDown),
					_user$project$Msg$SelectUpsideDown(_user$project$Model$NoUpsideDown)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Component_RadioComponent$radioIntervalTypeComponent = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('radio__interval__type__container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A3(
				_user$project$Component_RadioComponent$radio,
				'Second',
				_elm_lang$core$Native_Utils.eq(model.radioIntervalType, _user$project$Model$Second),
				_user$project$Msg$SelectIntervalTimingType(_user$project$Model$Second)),
			_1: {
				ctor: '::',
				_0: A3(
					_user$project$Component_RadioComponent$radio,
					'Minute',
					_elm_lang$core$Native_Utils.eq(model.radioIntervalType, _user$project$Model$Minute),
					_user$project$Msg$SelectIntervalTimingType(_user$project$Model$Minute)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Component_RadioComponent$radioIntervalMinutesComponent = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('radio__interval__timing__container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '1', _user$project$Model$M1),
			_1: {
				ctor: '::',
				_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '2', _user$project$Model$M2),
				_1: {
					ctor: '::',
					_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '3', _user$project$Model$M3),
					_1: {
						ctor: '::',
						_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '4', _user$project$Model$M4),
						_1: {
							ctor: '::',
							_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '5', _user$project$Model$M5),
							_1: {
								ctor: '::',
								_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '10', _user$project$Model$M10),
								_1: {
									ctor: '::',
									_0: A3(_user$project$Component_RadioComponent$radioComponent, model, 'Custom', _user$project$Model$Custom),
									_1: {
										ctor: '::',
										_0: _user$project$Component_RadioComponent$customInputComponent(model),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Component_RadioComponent$radioIntervalSecondsComponent = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('radio__interval__timing__container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '30', _user$project$Model$S30),
			_1: {
				ctor: '::',
				_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '45', _user$project$Model$S45),
				_1: {
					ctor: '::',
					_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '60', _user$project$Model$S60),
					_1: {
						ctor: '::',
						_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '90', _user$project$Model$S90),
						_1: {
							ctor: '::',
							_0: A3(_user$project$Component_RadioComponent$radioComponent, model, '120', _user$project$Model$S120),
							_1: {
								ctor: '::',
								_0: A3(_user$project$Component_RadioComponent$radioComponent, model, 'Custom', _user$project$Model$Custom),
								_1: {
									ctor: '::',
									_0: _user$project$Component_RadioComponent$customInputComponent(model),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Component_RadioComponent$radioIntervalSecondsOrMinutesComponent = function (model) {
	var _p3 = model.radioIntervalType;
	if (_p3.ctor === 'Second') {
		return _user$project$Component_RadioComponent$radioIntervalSecondsComponent(model);
	} else {
		return _user$project$Component_RadioComponent$radioIntervalMinutesComponent(model);
	}
};
var _user$project$Component_RadioComponent$radioIntervalComponent = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Component_RadioComponent$radioIntervalTypeComponent(model),
			_1: {
				ctor: '::',
				_0: _user$project$Component_RadioComponent$radioIntervalSecondsOrMinutesComponent(model),
				_1: {ctor: '[]'}
			}
		});
};
